{"version":3,"sources":["assets/home.svg","assets/coin.svg","assets/logout.svg","components/SideBar.tsx","assets/search.svg","assets/wallet.svg","components/API.tsx","components/NavBar.tsx","components/Card.tsx","assets/crypto_vid.gif","components/HomePage.tsx","components/CoinInfoPage.tsx","components/LoginPage.tsx","components/ErrorPage.tsx","assets/expand.svg","components/WalletHistory.tsx","components/SignupPage.tsx","components/Guide.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SideBar","history","useHistory","className","to","src","Home","alt","Coin","onClick","token","localStorage","getItem","split","removeItem","push","LogOut","APIcalls","URL","headers","TOKEN","getToken","APIcallsfunc","NavBar","useState","loadingState","setLoadingState","APIobject","useEffect","fetch","then","res","json","data","logged","catch","err","console","log","type","placeholder","SearchButt","Wallet","Card","price_currency","currency_name","currency_symbol","price","logo","id","replace","HomePage","cryptoData","setCryptoData","tryAgain","setTryAgain","url","error","href","GIF","height","width","map","currency","symbol","logo_url","CoinInfoPage","stripe","useStripe","elements","useElements","useParams","coinData","setCoinData","loginSuccess","setLoginSuccess","paymentState","setPaymentState","paymentError","setPaymentError","paymentErrorText","setPaymentErrorText","length","Date","getDate","handlePayment","a","paymentamount","document","getElementById","validity","valid","parseInt","value","cardElement","getElement","CardElement","createPaymentMethod","card","paymentMethod","message","date","bodydata","cryptoID","paymentid","paymentdate","getMonth","getFullYear","getHours","getMinutes","method","body","JSON","stringify","name","website_url","markets_count","discord_url","facebook_url","github_url","linkedin_url","telegram_url","reddit_url","twitter_url","whitepaper_url","youtube_url","description","options","style","base","iconColor","backgroundColor","fontSize","color","invalid","complete","empty","disabled","background","LoginPage","jwtToken","setjwtToken","loginError","setLoginError","errorDisplay","setErrorDisplay","setItem","emailid","textContent","password","errorDisplayfunc","loginUser","access_token","htmlFor","ErrorPage","WalletHistory","coinHistory","setCoinHistory","user","setUser","showDetails","event","display","nativeEvent","path","coindetails","querySelector","expand_button","getAttribute","transform","removeAttribute","setAttribute","firstname","lastname","coin","Expand","amountBTC","amountUSD","paymentID","date_of_purchase","time_of_purchase","_id","SignupPage","api","registerUser","inputValidation","password1","password2","response","Guide","stripePromise","loadStripe","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3cf836ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.e54d815c.svg\";","export default __webpack_public_path__ + \"static/media/coin.83c0d734.svg\";","export default __webpack_public_path__ + \"static/media/logout.9869f2c3.svg\";","import {useHistory, Link} from \"react-router-dom\";\nimport Home from \"../assets/home.svg\";\nimport Coin from \"../assets/coin.svg\";\nimport LogOut from \"../assets/logout.svg\"\nimport \"../css/SideBar.css\";\n\nexport default function SideBar(){\n    const history = useHistory();\n\n    const logoutEvent = ()=>{\n        const token = localStorage.getItem(\"token\");\n        if(token?.split(\" \")[0]===\"Bearer\"){\n            localStorage.removeItem(\"token\");\n        }\n        history.push(\"login\");\n    }\n    return (\n        <div className=\"SideBar\">\n            <div className=\"nav_buttons\">\n                <Link to=\"/\"><img src={Home} alt=\"home\"/></Link>\n                <Link to=\"wallet\"><img src={Coin} alt=\"coins\"/></Link>\n            </div>\n            <button onClick={logoutEvent}>\n                <img src={LogOut} alt=\"logout\"/>\n            </button>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/search.59c925ff.svg\";","export default __webpack_public_path__ + \"static/media/wallet.d401b643.svg\";","const APIcalls = {\n    URL: \"https://coinappcrypto.herokuapp.com/\",\n    headers:{\n        'Content-Type': 'application/json',\n        'Authorization': getToken(),\n    }\n}\nfunction getToken(){\n    const TOKEN = localStorage.getItem(\"token\");\n    if (TOKEN?.split(\" \")[0] === \"Bearer\"){\n        return TOKEN;\n    }\n    return \"123\";\n}\n\nexport default function APIcallsfunc(){\n    return APIcalls;\n}","import {useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"../css/NavBar.css\";\nimport SearchButt from \"../assets/search.svg\";\nimport Wallet from \"../assets/wallet.svg\";\nimport APIcallsfunc from \"./API\";\n\nexport default function NavBar(){\n    const [loadingState, setLoadingState] = useState<Boolean>(false);\n    const APIobject = APIcallsfunc();\n    useEffect(()=>{\n        fetch(APIobject.URL, {\n            headers:APIobject.headers\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.logged === true){\n                setLoadingState(true);\n            }\n        }).catch(err => console.log(err));\n    }, [APIobject]);\n    return (\n        <div className=\"NavBar\">\n            <img src=\"\" alt=\"Logo\"/>\n            <div className=\"searchbar\">\n                <input type=\"text\" placeholder=\"Search\"/>\n                <button><img src={SearchButt} alt=\"O\"/></button>\n            </div>\n            <div className=\"user-wallet\">\n                <Link className=\"wallet\" to={loadingState?\"wallet\":\"login\"}>\n                    <img src={Wallet} alt=\"wallet\" />\n                    {loadingState && <span>Wallet</span>}\n                    {!loadingState && <span>Login</span>}\n                </Link>\n            </div>\n        </div>\n    )\n}","import \"../css/Card.css\";\ninterface Props{\n    currency_name ?:string,\n    currency_symbol? :string,\n    price ?:string,\n    logo ?:string,\n}\nconst Card :React.FC<Props> = ({currency_name, \ncurrency_symbol,\nprice,\nlogo\n})=>{\n    const calcPrize = (price_currency :string | undefined)=>{\n        const regex_pattern1 = /(?<=\\d+\\.\\d{2})\\d+/;\n        if (price_currency){\n            let price_curr :string=price_currency.replace(regex_pattern1, \"\");\n            return price_curr;\n        }else{return 0}\n    }\n\n    return (\n        <div id=\"Card\">\n            <img src={logo} alt=\"Cryto Coin\" />\n            <div className=\"coin_props\">\n                <div>Name: {currency_name}</div>\n                <div>Currency: {currency_symbol}</div>\n                <div>Price: {calcPrize(price)} USD</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","export default __webpack_public_path__ + \"static/media/crypto_vid.c0d7c925.gif\";","import Card from \"./Card\";\nimport \"../css/HomePage.css\";\nimport GIF from \"../assets/crypto_vid.gif\";\nimport {useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default function HomePage(){\n    const [loadingState , setLoadingState] = useState(true);\n    const [cryptoData, setCryptoData] = useState([]);\n    const [tryAgain, setTryAgain] = useState<Boolean>(false);\n\n    useEffect(()=>{\n        let status_coin :string = 'active';\n        let per_page :number = 90;\n        let page_number :number = 1;\n        const API_KEY :string = \"66922aeaa211b6765271e517b079a07c\";\n        const url :string = `https://api.nomics.com/v1/currencies/ticker?key=${API_KEY}&status=${status_coin}&per-page=${per_page}&page=${page_number}`;\n        fetch(url).then(res => res.json()).then(data => {\n            setCryptoData(data);\n            setLoadingState(false);\n        }).catch(error => setTryAgain(true));\n    },[])\n\n    return (\n        <div id=\"HomePage\">\n            <div>Do follow <a href=\"https://nomics.com\">Crypto Market Cap & Pricing Data Provided By Nomics</a></div>\n            <div className=\"gallery\">\n                <img src={GIF} alt=\"GIF\" height=\"auto\" width=\"100%\"/>\n            </div>\n                {!loadingState &&\n                    <div id=\"crypto_cards\">\n                    {\n                        cryptoData.map((data :any)=>{\n                            return (\n                                <Link key={data.id} to={data.id}>\n                                <Card currency_name={data.currency}\n                                    currency_symbol={data.symbol}\n                                    price={data.price}\n                                    logo={data.logo_url}\n                                />\n                                </Link>\n                            );\n                        })\n                    }\n                    </div>\n                }\n            {!tryAgain && loadingState && <div className=\"loader\"></div>}\n            {tryAgain && \n                <div className=\"try-again\">\n                    <button id=\"try-again\">Reload</button>\n                    <div>Check your internet connection and try again</div>\n                </div>\n            }\n        </div>\n    )\n}","/*\nBuild a page not found page and redirect\ninvalid ids to that page\n*/\nimport {useEffect, useState} from \"react\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport \"../css/CoinInfoPage.css\";\nimport APIcallsfunc from \"./API\";\n\ntype coininfo ={\n    logo_url : string;\n    id : string;\n    name : string;\n    website_url : string;\n    description : string;\n    markets_count : string;\n    discord_url : string;\n    facebook_url : string;\n    github_url : string;\n    linkedin_url : string;\n    reddit_url : string;\n    telegram_url : string;\n    twitter_url : string;\n    whitepaper_url : string;\n    youtube_url : string;\n}\n\nexport default function CoinInfoPage(){\n    const history = useHistory();\n    const APIobject = APIcallsfunc();\n    const card_styling = {\n        style:{\n            base:{\n                iconColor:'#000000',\n                backgroundColor:'#537d7d',\n                fontSize: '16px',\n                color: '#ffffff',\n                '::placeholder':{\n                    color: '#000000',\n                },\n            },\n            invalid: {\n                fontSize: '16px',\n                color: '#537d7d',\n            },\n            complete : {\n                backgroundColor: '#365252',\n            },\n            empty :{\n                backgroundColor: \"#537d7d\",\n            }\n        },\n    }\n    const stripe = useStripe();\n    const elements = useElements();\n    const id :{id : string}= useParams();\n    const [coinData, setCoinData] = useState<coininfo[] | undefined>();\n    const [loginSuccess, setLoginSuccess] = useState<Boolean>(false);\n    const [paymentState, setPaymentState] = useState<Boolean>(false);\n    const [paymentError, setPaymentError] = useState<Boolean>(false);\n    const [paymentErrorText, setPaymentErrorText] = useState<String | string | undefined>(\"\");\n    useEffect(()=>{\n        fetch(APIobject.URL, {\n            headers: APIobject.headers\n        }).then(res => res.json())\n        .then(data => {\n            if(data.logged){\n                console.log(data);\n                setLoginSuccess(true);\n                return;\n            }\n            setLoginSuccess(false);\n        }).catch(err => setLoginSuccess(false));\n    },[APIobject]);\n    useEffect(() => {\n        const key :string = '66922aeaa211b6765271e517b079a07c';\n        const URL :string = `https://api.nomics.com/v1/currencies?key=${key}&ids=${id.id}`;\n        fetch(URL).then(res => res.json()).then(data => {\n            if (data.length === 1) setCoinData(data);\n            else {\n                history.push(\"/page-not-found\");\n            }\n        }).catch(err => console.log(err));\n        console.log(new Date().getDate());\n    }, [id, history])\n\n    const handlePayment = async()=>{\n        setPaymentState(true);\n        const paymentamount = (document.getElementById(\"payment-amount\") as HTMLInputElement);\n        if(paymentamount.validity.valid && parseInt(paymentamount.value) > 100){\n            if (!stripe || !elements){\n                return;\n            }\n            const cardElement = elements?.getElement(CardElement);\n            if (cardElement){\n                const {error, paymentMethod} = await stripe?.createPaymentMethod({\n                    type: 'card',\n                    card: cardElement,\n                });\n                if (error){\n                    await setPaymentError(true);\n                    await setPaymentErrorText(error.message);\n                    setPaymentState(false);\n                    return;\n                }\n                /// handling payment\n                const date = new Date();\n                const bodydata = {\n                    cryptoID : id.id,\n                    paymentamount: parseInt(paymentamount.value),\n                    paymentid: paymentMethod?.id,\n                    paymentdate: `${date.getDate()}-${date.getMonth()}-${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`\n                };\n                await fetch(`${APIobject.URL}make-payment`, {\n                    method:'POST',\n                    headers: APIobject.headers,\n                    body: JSON.stringify(bodydata)\n                }).then(res => res.json()).then(data => console.log(data))\n                .catch(err => console.log(err));\n            }\n\n        };\n        setPaymentState(false);\n    }\n\n    return (\n        <div className=\"CoinInfoPage\">\n            <div className=\"crypto-summary\">\n                <img src={coinData?.[0]?.logo_url} alt=\"crypto\"/>\n                <div>\n                    <span>Crypro ID:</span> {coinData?.[0]?.id}\n                    <br/><br/>\n                    <span>Crypto name:</span> {coinData?.[0]?.name}\n                    <br/><br/>\n                    <span>Website url:</span> <a href={coinData?.[0]?.website_url}>{coinData?.[0]?.website_url}</a><br/><br/>\n                    <span>Markets Count:</span> {coinData?.[0]?.markets_count}\n                </div>\n            </div>\n            <div className=\"crypto-community-urls\">\n                <div><span>Discord URL: </span></div><div><a href={coinData?.[0]?.discord_url}>{coinData?.[0]?.discord_url}</a></div>\n                <div><span>Facebook URL: </span></div><div><a href={coinData?.[0]?.facebook_url}>{coinData?.[0]?.facebook_url}</a></div>\n                <div><span>Github URL: </span></div><div><a href={coinData?.[0]?.github_url}>{coinData?.[0]?.github_url}</a></div>\n                <div><span>Linkedin URL: </span></div><div><a href={coinData?.[0]?.linkedin_url}>{coinData?.[0]?.linkedin_url}</a></div>\n                <div><span>Telegram URL: </span></div><div><a href={coinData?.[0]?.telegram_url}>{coinData?.[0]?.telegram_url}</a></div>\n                <div><span>Reddit URL: </span></div><div><a href={coinData?.[0]?.reddit_url}>{coinData?.[0]?.reddit_url}</a></div>\n                <div><span>Twitter URL: </span></div><div><a href={coinData?.[0]?.twitter_url}>{coinData?.[0]?.twitter_url}</a></div>\n                <div><span>Whitepaper URL: </span></div><div><a href={coinData?.[0]?.whitepaper_url}>{coinData?.[0]?.whitepaper_url}</a></div>\n                <div><span>YouTube URL: </span></div><div><a href={coinData?.[0]?.youtube_url}>{coinData?.[0]?.youtube_url}</a></div>\n            </div>\n            <div className=\"crypto-description\">\n                <div>Description: </div>\n                {coinData?.[0]?.description}\n            </div>\n            {loginSuccess &&\n            <div className=\"stripe-payment\">\n                <CardElement options={card_styling}/>\n                <div className=\"payment-amount\">Amount :<input type=\"number\" id=\"payment-amount\"/><span>(USD)</span></div>\n                {paymentError && <div style={{color: \"red\"}}>{paymentErrorText}</div>}\n                {!paymentState && <button onClick={handlePayment}>Make Payment</button>}\n                {paymentState && <button disabled style={{background:\"grey\"}}>Please Wait...</button>}\n            </div>}\n            {!loginSuccess && \n                <div style={{color: \"red\"}}>\n                    <a href=\"login/\">Login</a> to your account to buy coins\n                </div>\n            }\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {useHistory, Link} from 'react-router-dom';\nimport APIcalls from \"./API\";\nimport \"../css/LoginPage.css\";\n\nexport default function LoginPage() {\n    interface LoginError{\n        emailid: boolean,\n        password: boolean,\n        logged: boolean\n    }\n\n    const [loadingState, setLoadingState] = useState<Boolean>(false);\n    const [jwtToken, setjwtToken] = useState<string>(\"\");\n    const [loginError, setLoginError] = useState<LoginError>();\n    const [errorDisplay, setErrorDisplay] = useState<Boolean>(false);\n    const history = useHistory();\n\n    /// storing the data to localStorage\n\n    useEffect(() => {\n        if(jwtToken.split(\" \")[0]===\"Bearer\"){\n            localStorage.removeItem(\"token\");\n            localStorage.setItem(\"token\", jwtToken);\n        }\n        return ()=>{\n        }\n    }, [jwtToken]);\n    /// handling error function\n    useEffect(()=>{\n        console.log(loginError);\n        async function errorDisplayfunc(){\n            if (loginError?.emailid === false){\n                await setErrorDisplay(true);\n                (document.getElementById(\"error-type\") as HTMLElement).textContent = \"Enter a valid Email Address\";\n            }\n            if(loginError?.password === false){\n                await setErrorDisplay(true);\n                (document.getElementById(\"error-type\") as HTMLElement).textContent = \"Entered password dosen't match\";\n            }\n            if(loginError?.logged === false){\n                await setErrorDisplay(true);\n                (document.getElementById(\"error-type\") as HTMLElement).textContent = \"Entered a wrong username or password\";\n            }\n        }\n        errorDisplayfunc();\n}, [loginError]);\n\n    /// handling user login function\n    const loginUser= async ()=>{\n        setLoadingState(true);\n        const emailid = (document.getElementById(\"email-id\") as HTMLInputElement);\n        const password = (document.getElementById(\"password\") as HTMLInputElement).value;\n        if (emailid.validity.valid && password && emailid.value){\n            const data = {\n                emailid : emailid.value,\n                password\n            }\n            await fetch(`${APIcalls().URL}login/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            }).then(res => res.json()).then(async (data) => {\n                if(data.access_token){\n                    let token: string = `Bearer ${data.access_token}`;\n                    await setjwtToken(token);\n                    history.push(\"/\");\n                    return;\n                }\n                setLoginError(data);\n            })\n            .catch(error => console.log(error));\n        }else{\n            await setErrorDisplay(true);\n            (document.getElementById(\"error-type\") as HTMLElement).textContent = \"Entered a wrong username or password\";\n        }\n        setLoadingState(false);\n    }\n    return (\n        <div className=\"LoginPage\">\n            <div>\n            <div className=\"login-credentials\">\n                <div><u>LOGIN PAGE :</u></div>\n                <div>\n                    <label htmlFor=\"email-id\">Email ID: </label>\n                    <div className=\"underline-box\">\n                        <input name=\"email-id\" id=\"email-id\" type=\"email\" placeholder=\"Enter your Email Address\"/>\n                        <div className=\"underline\"></div>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <div className=\"underline-box\">\n                        <input name=\"password\" id=\"password\" type=\"password\" placeholder=\"Enter your password\"/>\n                        <div className=\"underline\"></div>\n                    </div>\n                </div>\n                {!loadingState && <button className=\"login-button\" onClick={loginUser}>LOGIN</button>}\n                {loadingState && <button className=\"loading-button\" disabled>Please Wait...</button>}\n                {errorDisplay && <div id=\"error-type\" style={{color: \"red\"}}></div>}\n                <div>Don't have an account?<Link to=\"/signup\">Create an account</Link></div>\n            </div>\n            Make sure to read the <Link to=\"/guide\">Guide</Link> for login details and more\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport \"../css/ErrorPage.css\";\n\nexport default function ErrorPage() {\n    return (\n        <div className=\"ErrorPage\">\n            <div className=\"error-404\">404</div>\n            <div className=\"display-error\">Error: Page Not Found</div>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/expand.13e90032.svg\";","import React, {useState, useEffect} from 'react'\nimport \"../css/WalletHistory.css\";\nimport Expand from \"../assets/expand.svg\";\nimport APIcallsfunc from \"./API\";\n\nexport default function WalletHistory() {\n    const [coinHistory, setCoinHistory] = useState([]);\n    const [user, setUser] = useState<String | string>(\"\");\n    const showDetails = (event :any) =>{\n        const display = (event.nativeEvent.path[3] as HTMLDivElement);\n        const coindetails = display.querySelector(\".coin-wallet-details\");\n        const expand_button = display.querySelector(\".coin-wallet-display>button>img\") as HTMLImageElement;\n        if(coindetails?.getAttribute(\"id\")){\n            expand_button.style.transform = \"rotate(0deg)\"\n            coindetails?.removeAttribute(\"id\");\n            return;\n        };\n        expand_button.style.transform = \"rotate(180deg)\"\n        coindetails?.setAttribute(\"id\", \"expanded\");\n    }\n\n    useEffect(()=>{\n        const token = localStorage.getItem(\"token\");\n        if(token?.split(\" \")[0]===\"Bearer\"){\n            fetch(`${APIcallsfunc().URL}user-info`, {\n                headers: APIcallsfunc().headers\n            }).then(res => res.json()).then(data => {\n                if (data.firstname){\n                    setUser(`${data.firstname} ${data.lastname}`);\n                }\n            })\n            .catch(err => console.log(err));\n        }\n        fetch(`${APIcallsfunc().URL}paymenthistory`, {\n            headers: APIcallsfunc().headers\n        }).then(res => res.json())\n        .then(data => setCoinHistory(data))\n        .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <div className=\"WalletHistory\">\n            <div className=\"greet\">\n                Hey, <br/>\n                {user}\n            </div>\n            <div className=\"purchase-history\">\n                Purchase histroy :\n            </div>\n            <div className=\"History-display\">\n                {\n                    coinHistory.map((data : any) => {\n                        return (\n                            <div key={data._id}>\n                                <div className=\"coin-wallet-display\">\n                                    <div className=\"crypto-coin-name\">{data.coin}</div>\n                                    <button onClick={showDetails}>\n                                        <img src={Expand} alt=\"expand\"/>\n                                    </button>\n                                </div>\n                                <div className=\"coin-wallet-details\">\n                                    <div>Coins purchased : {data.amountBTC}</div>\n                                    <div>Payment amount : ${data.amountUSD}</div>\n                                    <div>Payment ID : {data.paymentID}</div>\n                                    <div>Price(USD) :</div>\n                                    <div>Date of purchase : {data.date_of_purchase} ({data.time_of_purchase})</div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport \"../css/SignupPage.css\";\nimport APIcallsfunc from \"./API\";\n\nexport default function SignupPage() {\n    const api = APIcallsfunc();\n    const [loadingState, setLoadingState] = useState<Boolean>(false);\n    const registerUser = async ()=>{\n        setLoadingState(true);\n        const inputValidation = (document.getElementById(\"email-address\") as HTMLInputElement);\n        const password1 = (document.getElementById(\"password1\") as HTMLInputElement)?.value;\n        const password2 = (document.getElementById(\"password2\") as HTMLInputElement)?.value;\n        const firstname = (document.getElementById(\"first-name\") as HTMLInputElement);\n        const lastname = (document.getElementById(\"last-name\") as HTMLInputElement);\n        if(inputValidation.validity.valid && password1 === password2 && firstname?.validity.valid && lastname?.validity.valid){\n            const data = {\n                firstname: firstname.value,\n                lastname: lastname.value,\n                emailid: inputValidation.value,\n                password: password2\n            };\n           await fetch(`${api.URL}signup`, {\n               method: 'POST',\n               headers:{\n                   'Content-Type': 'application/json'\n               },\n               body: JSON.stringify(data),\n           }).then(response => response.json())\n           .then(data => console.log(data)).catch(error => console.log(error));\n        };\n        setLoadingState(false);\n    }\n    return (\n        <div className=\"SignupPage\">\n            <div className=\"signup-credentials\">\n                <div><u>SIGN UP :</u></div>\n                <div>\n                    <label htmlFor=\"first-name\" >First Name :</label>\n                    <div className=\"underline-box--signup\">\n                        <input name=\"first-name\" id=\"first-name\" type=\"text\"/>\n                        <div className=\"underline--signup\"></div>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"last-name\" >Last Name :</label>\n                    <div className=\"underline-box--signup\">\n                        <input name=\"last-name\" id=\"last-name\" type=\"text\"/>\n                        <div className=\"underline--signup\"></div>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"email-address\" >Email ID</label>\n                    <div className=\"underline-box--signup\">\n                        <input name=\"email-address\" id=\"email-address\" type=\"email\"/>\n                        <div className=\"underline--signup\"></div>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"password1\" >Password :</label>\n                    <div className=\"underline-box--signup\">\n                        <input name=\"password1\" id=\"password1\" type=\"password\"/>\n                        <div className=\"underline--signup\"></div>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"password2\" >Confirm Password :</label>\n                    <div className=\"underline-box--signup\">\n                        <input name=\"password2\" id=\"password2\" type=\"password\"/>\n                        <div className=\"underline--signup\"></div>\n                    </div>\n                </div>\n                {!loadingState && <button id=\"create-account\" onClick={registerUser}>Create Account</button>}\n                {loadingState && <button id=\"create-account--loading\" disabled>Creating account...</button>}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport \"../css/Guide.css\";\n\nexport default function Guide() {\n    return (\n        <div className=\"Guide\">\n            If you are a test user login using the following email id and password<br/>\n            <ul>\n                <li><span><u>Email ID </u></span>: testuser@gmail.com<br/></li>\n                <li><span><u>Password </u></span>: test</li>\n                <li><u>Card Number</u> : 4242 4242 4242 4242</li>\n                <li><u>Date</u> : Enter any future date</li>\n                <li><u>CVC</u> : Enter any three digit integer</li>\n                <li><u>Zipcode</u> : Enter any five digit integer</li>\n            </ul>\n            <div>Back to the <a href=\"/login\">Login Page</a></div>\n        </div>\n    )\n}\n","import SideBar from \"./components/SideBar\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport CoinInfoPage from \"./components/CoinInfoPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport WalletHistory from \"./components/WalletHistory\";\nimport SignupPage from \"./components/SignupPage\";\nimport Guide from \"./components/Guide\";\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nconst stripePromise = loadStripe(\"pk_test_51IlSFtSC5EizyScKyNhFHgoxtl5eLQTdyBkL0ExEVTmZfHlRnpHwRaROGFwzBPSTzGYTtA9ecMempc5iSefdGcA700mM11YTy8\");\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignupPage />\n          </Route>\n          <Route exact path=\"/\">\n            <NavBar />\n            <SideBar />\n            <HomePage />\n          </Route>\n          <Route path=\"/page-not-found\">\n            <ErrorPage />\n          </Route>\n          <Route path=\"/wallet\">\n            <NavBar />\n            <SideBar />\n            <WalletHistory />\n          </Route>\n          <Route path=\"/guide\">\n            <Guide />\n          </Route>\n          <Route path=\"/:id\">\n            <Elements stripe= {stripePromise}>\n              <NavBar />\n              <SideBar />\n              <CoinInfoPage />\n            </Elements>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}